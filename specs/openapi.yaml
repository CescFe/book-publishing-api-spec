openapi: 3.1.2
info:
  title: Book Publishing API
  version: 0.1.0
  description: |-
    API for managing books, authors, and collections in a publishing system.
    This API provides CRUD operations for books, collections and authors with role-based differentiation.
  contact:
    name: FrancescFe
    url: https://github.com/FrancescFe
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: local server

paths:
  /api/v1/authors:
    get:
      tags:
        - GetAllAuthors
      operationId: getAuthors
      summary: Get all authors
      description: Retrieve a paginated list of all authors
      parameters:
        - $ref: './shared/components/parameters/pagination.yaml#/page'
        - $ref: './shared/components/parameters/pagination.yaml#/limit'
        - $ref: './shared/components/parameters/pagination.yaml#/search'
      responses:
        '200':
          $ref: './author/components/responses/authors-list.yaml'
        '400':
          $ref: './shared/components/responses/errors/bad-request.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
    post:
      tags:
        - CreateAuthor
      operationId: createAuthor
      summary: Create a new author
      description: Create a new author with the provided information
      requestBody:
        $ref: './author/components/requests/create-author.yaml'
      responses:
        '201':
          $ref: './author/components/responses/author-created.yaml'
        '400':
          $ref: './shared/components/responses/errors/bad-request.yaml'
        '409':
          $ref: './shared/components/responses/errors/conflict.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
  /api/v1/authors/{id}:
    get:
      tags:
        - GetAuthorById
      operationId: getAuthorByID
      summary: Get author by ID
      description: Retrieve a single author by their unique identifier
      parameters:
        - $ref: './shared/components/parameters/uuid-path.yaml'
      responses:
        '200':
          $ref: './author/components/responses/author-detail.yaml'
        '404':
          $ref: './shared/components/responses/errors/not-found.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
    put:
      tags:
        - UpdateAuthorById
      operationId: updateAuthor
      summary: Update an author
      description: Update an existing author by their unique identifier
      parameters:
        - $ref: './shared/components/parameters/uuid-path.yaml'
      requestBody:
        $ref: './author/components/requests/update-author.yaml'
      responses:
        '200':
          $ref: './author/components/responses/author-updated.yaml'
        '400':
          $ref: './shared/components/responses/errors/bad-request.yaml'
        '404':
          $ref: './shared/components/responses/errors/not-found.yaml'
        '409':
          $ref: './shared/components/responses/errors/conflict.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
    delete:
      tags:
        - DeleteAuthorById
      operationId: deleteAuthor
      summary: Delete an author
      description: Delete an existing author by their unique identifier
      parameters:
        - $ref: './shared/components/parameters/uuid-path.yaml'
      responses:
        '204':
          $ref: './author/components/responses/author-deleted.yaml'
        '404':
          $ref: './shared/components/responses/errors/not-found.yaml'
        '409':
          $ref: './shared/components/responses/errors/conflict.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'

  /api/v1/collections:
    get:
      tags:
        - GetAllCollections
      operationId: getCollections
      summary: Get all collections
      description: Retrieve a paginated list of all collections
      parameters:
        - $ref: './shared/components/parameters/pagination.yaml#/page'
        - $ref: './shared/components/parameters/pagination.yaml#/limit'
        - $ref: './shared/components/parameters/pagination.yaml#/search'
      responses:
        '200':
          $ref: './author/components/responses/authors-list.yaml'
        '400':
          $ref: './shared/components/responses/errors/bad-request.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
    post:
      tags:
        - CreateCollection
      operationId: createCollection
      summary: Create a new collection
      description: Create a new collection with the provided information
      requestBody:
        $ref: './author/components/requests/create-author.yaml'
      responses:
        '201':
          $ref: './author/components/responses/author-created.yaml'
        '400':
          $ref: './shared/components/responses/errors/bad-request.yaml'
        '409':
          $ref: './shared/components/responses/errors/conflict.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
  /api/v1/collections/{id}:
    get:
      tags:
        - GetCollectionById
      operationId: getCollectionByID
      summary: Get collection by ID
      description: Retrieve a single collection by their unique identifier
      parameters:
        - $ref: './shared/components/parameters/uuid-path.yaml'
      responses:
        '200':
          $ref: './author/components/responses/author-detail.yaml'
        '404':
          $ref: './shared/components/responses/errors/not-found.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
    put:
      tags:
        - UpdateCollectionById
      operationId: updateCollection
      summary: Update a collection
      description: Update an existing collection by their unique identifier
      parameters:
        - $ref: './shared/components/parameters/uuid-path.yaml'
      requestBody:
        $ref: './author/components/requests/update-author.yaml'
      responses:
        '200':
          $ref: './author/components/responses/author-updated.yaml'
        '400':
          $ref: './shared/components/responses/errors/bad-request.yaml'
        '404':
          $ref: './shared/components/responses/errors/not-found.yaml'
        '409':
          $ref: './shared/components/responses/errors/conflict.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
    delete:
      tags:
        - DeleteCollectionById
      operationId: deleteCollection
      summary: Delete an collection
      description: Delete an existing collection by their unique identifier
      parameters:
        - $ref: './shared/components/parameters/uuid-path.yaml'
      responses:
        '204':
          $ref: './author/components/responses/author-deleted.yaml'
        '404':
          $ref: './shared/components/responses/errors/not-found.yaml'
        '409':
          $ref: './shared/components/responses/errors/conflict.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'

components:
  schemas:
    Collection:
      $ref: './collection/components/schemas/collection.yaml'
    Author:
      $ref: './author/components/schemas/author.yaml'
    Book:
      $ref: './book/components/schemas/book.yaml'


