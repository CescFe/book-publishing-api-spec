openapi: 3.1.2
info:
  title: Book Publishing API
  version: 0.1.0
  description: |-
    API for managing books, authors, and collections in a publishing system.
    This API provides CRUD operations for books, collections and authors with role-based differentiation.
  contact:
    name: FrancescFe
    url: https://github.com/FrancescFe
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://dev.api.bookpublishing.com/v1
    description: Development server
  - url: https://api.bookpublishing.com/v1
    description: Production server

security:
  - BearerAuth: []
  - ApiKeyAuth: []
  - {}

tags:
  - name: Authors
    description: Operations related to authors

paths:
  /authors:
    get:
      tags:
        - Authors
      operationId: getAuthors
      summary: Get all authors
      description: Retrieve a paginated list of all authors
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of authors per page
        - name: search
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
          description: Search term to filter authors by name
      responses:
        '200':
          $ref: './author/components/responses/authors-list.yaml'
        '400':
          $ref: './shared/components/responses/errors/bad-request.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
    post:
      tags:
        - Authors
      operationId: createAuthor
      summary: Create a new author
      description: Create a new author with the provided information
      requestBody:
        $ref: './author/components/requests/create-author.yaml'
      responses:
        '201':
          $ref: './author/components/responses/author-created.yaml'
        '400':
          $ref: './shared/components/responses/errors/bad-request.yaml'
        '409':
          $ref: './shared/components/responses/errors/conflict.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'
  /authors/{id}:
    get:
      tags:
        - Authors
      operationId: getAuthorByID
      summary: Get author by ID
      description: Retrieve a single author by their unique identifier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the author
      responses:
        '200':
          $ref: './author/components/responses/author-detail.yaml'
        '404':
          $ref: './shared/components/responses/errors/not-found.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'

    put:
      tags:
        - Authors
      operationId: updateAuthor
      summary: Update an author
      description: Update an existing author by their unique identifier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the author
      requestBody:
        $ref: './author/components/requests/update-author.yaml'
      responses:
        '200':
          $ref: './author/components/responses/author-updated.yaml'
        '400':
          $ref: './shared/components/responses/errors/bad-request.yaml'
        '404':
          $ref: './shared/components/responses/errors/not-found.yaml'
        '409':
          $ref: './shared/components/responses/errors/conflict.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'

    delete:
      tags:
        - Authors
      operationId: deleteAuthor
      summary: Delete an author
      description: Delete an existing author by their unique identifier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the author
      responses:
        '204':
          $ref: './author/components/responses/author-deleted.yaml'
        '404':
          $ref: './shared/components/responses/errors/not-found.yaml'
        '409':
          $ref: './shared/components/responses/errors/conflict.yaml'
        '500':
          $ref: './shared/components/responses/errors/internal-error.yaml'

components:
  schemas:
    Collection:
      $ref: './collection/components/schemas/collection.yaml'
    Author:
      $ref: './author/components/schemas/author.yaml'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication
